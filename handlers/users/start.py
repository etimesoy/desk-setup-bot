import re
from typing import Union

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart

from keyboards.inline import get_bot_functionality
from keyboards.inline.referral_stuff import referral_buttons
from keyboards.inline.callback_data import bot_functionality
from loader import dp
from utils.misc import get_channel_participants


@dp.message_handler(CommandStart(deep_link=re.compile(r"^\d{4,15}$")))
@dp.message_handler(CommandStart(deep_link="desk_setup_channel"))
async def bot_start_with_deep_link(message_or_call: Union[types.Message, types.CallbackQuery]):
    if isinstance(message_or_call, types.Message):
        message = message_or_call
    else:
        message = message_or_call.message
    user_full_name = message_or_call.from_user.full_name
    user_id = message_or_call.from_user.id
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_full_name}! "
                         f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –∫–ª–µ–≤—ã—Ö –≤–µ—â–µ–π –¥–ª—è —Ç–≤–æ–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞üòâ\n"
                         f"–í–æ—Ç, —á—Ç–æ —è —É–º–µ—é:", reply_markup=get_bot_functionality(user_id))


@dp.message_handler(CommandStart())
async def bot_start_without_deep_link(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! "
                         f"–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ.\n"
                         f"–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–±:", reply_markup=referral_buttons)


@dp.callback_query_handler(bot_functionality.filter(functionality_name="check_channel_subscription"))
async def check_channel_subscription(call: types.CallbackQuery):
    # if call.message.chat.id in await get_channel_participants(-1001594274069):
    #     await bot_start_with_deep_link(call.message)
    # TODO: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª
    # TODO: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å id –∫–∞–Ω–∞–ª–∞ –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await bot_start_with_deep_link(call)


@dp.callback_query_handler(bot_functionality.filter(functionality_name="enter_referrer_id"))
async def enter_referrer_id(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_text("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å")
    await state.set_state("enter_referrer_id")


@dp.message_handler(state="enter_referrer_id")
async def save_referrer_id(message: types.Message, state: FSMContext):
    # TODO: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å ID –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await state.reset_state()
    await bot_start_with_deep_link(message)
